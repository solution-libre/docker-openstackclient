# Copyright (C) 2024 Solution Libre
# 
# This file is part of OpenStack Client Docker Image.
# 
# OpenStack Client Docker Image is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# OpenStack Client Docker Image is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with OpenStack Client Docker Image.  If not, see <https://www.gnu.org/licenses/>.

include:
  - component: $CI_SERVER_FQDN/gitlab/components/lint/markdown@0.2.1
    inputs:
      stage: linting
  - component: usine.solution-libre.fr/gitlab/components/changelog/parse@0.1.2

stages:
  - linting
  - build
  - test
  - release

hadolint:
  stage: linting
  image: registry.gitlab.com/pipeline-components/hadolint:latest
  script:
    - hadolint Dockerfile

docker build:
  stage: build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      docker build \
        --pull \
        --label org.opencontainers.image.created=$(date -Iseconds) \
        --label org.opencontainers.image.revision=${CI_COMMIT_REF_SLUG} \
        -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
        docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
      fi

docker test:
  stage: test
  needs:
    - docker build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker run --rm ${DOCKER_IMAGE_NAME} --version

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  cache: []
  needs:
    - parse changelog
    - docker test
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --description release-note.md \
        --assets-link "{\"name\":\"Docker image\",\"url\":\"${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"\",\"link_type\":\"image\"}"
